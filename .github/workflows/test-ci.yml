name: test CI workflow

env:
  PROTECTED_MODULES:
    flAreaTimeNum3d
    overview_bekido
    template
    timeAnalysisChart
  FIXED_DEPLOYMENT_TARGETS:
    view/public/.deploy_commitid
    view/public/js/dev_menu.js

on:
  push:
    branches:
      - 'sub**'        # match the branch started with pkg-

jobs:
  Test_checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        run: |
          for CI_TARGET in ${CI_TARGETS};
          do
            echo ${CI_TARGET}
            echo "OK"
          done
          git config --global credential.helper cache
          git config -l
          git clone -b master https://${{secrets.GIT_USER}}:${{secrets.GIT_TOKEN}}@github.com/GembaCPS/ProcessVisualizer.git --recursive
          cd ProcessVisualizer
          CONTENTS_MODULES=$(find -type d -regextype posix-basic -regex ".*/contents/.*")
          NON_PROTECTED_MODULES=""
          for CONTENTS_MODULE in ${CONTENTS_MODULES};
          do
            is_none_protected_module=true
            for PROTECTED_MODULE in ${PROTECTED_MODULES};
            do
              if [[ ${CONTENTS_MODULE} =~ ${PROTECTED_MODULE} ]]; then
                is_none_protected_module=false
              fi
            done
            if "${is_none_protected_module}"; then
              NON_PROTECTED_MODULES="${NON_PROTECTED_MODULES} ${CONTENTS_MODULE}"
            fi
          done
          echo ${NON_PROTECTED_MODULES}
          NON_PROTECTED_MODULES="${NON_PROTECTED_MODULES} ${FIXED_DEPLOYMENT_TARGETS}"
          for NON_PROTECTED_MODULE in ${NON_PROTECTED_MODULES};
          do
            echo ${NON_PROTECTED_MODULE}
          done
          pwd
      - name: Checkdir
        run: |
          pwd
          ls ProcessVisualizer
    

  Auto_Pull_Request:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64

      - uses: actions/checkout@v3
      - name: Create pull request
        continue-on-error: true
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          if [ -z "$(git diff origin/main --diff-filter=ACMR --name-only)" ]; then
            echo "At new branch. Dont create pr"
            exit 0
          fi
          gh pr create -B "main" -t "Develop ${{ env.BRANCH }} into main" -b "" -a $AUTHOR -r $AUTHOR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${GITHUB_REF#refs/heads/}
          ASSIGNEE: ${{ github.event.pull_request.user.login }}
          AUTHOR: ${{ github.event.pusher.name }}
